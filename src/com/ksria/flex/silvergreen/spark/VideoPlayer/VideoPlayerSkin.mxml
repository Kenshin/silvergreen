<?xml version="1.0" encoding="utf-8"?>
<!--- 
    这是一套基于Flex SDK 4.6基础上制作的关于spark/mx的自定义皮肤
    作者姓名：Kenshin
    作者博客：http://www.k-zone.cn/zblog/
    主页地址：http://www.k-zone.cn/project/silvergreen.html
    项目地址：https://github.com/kenshin/silvergreen
    预览地址：http://www.k-zone.cn/silvergreen/
    下载地址：https://github.com/kenshin/silvergreen
    联络邮箱：kenshin@ksria.com
    新浪微博：http://weibo.com/wonlen
    发布日期：2011年12月19日

    Copyright (c) 2011 www.k-zone.cn ksria.com

	Permission is hereby granted, free of charge, to any person obtaining a copy of
	this software and associated documentation files (the "Software"), to deal in
	the Software without restriction, including without limitation the rights to
	use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
	of the Software, and to permit persons to whom the Software is furnished to do
	so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
	
	Except as contained in this notice, the Software shall not be used in any commercial purposes.

    @author Kenshin
    @version 2.0
-->
<s:SparkSkin 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark"
	alpha.disabledStates="0.5" 
    chromeColor.fullScreenStates="0xCCCCCC"
>

    <!-- host component -->
    <fx:Metadata>
		<![CDATA[ 

			/** 
			 * @copy spark.skins.spark.ApplicationSkin#hostComponent
			 */
			[HostComponent("spark.components.VideoPlayer")]

	    ]]>
	</fx:Metadata>
    
    <fx:Script>
        <![CDATA[
            /* Define the skin elements that should not be colorized. */
            static private const exclusions:Array = ["videoDisplay", "playPauseButton", "scrubBar", 
                                                     "currentTimeDisplay", "timeDivider", "durationDisplay", 
                                                     "volumeBar", "fullScreenButton"];
            
            /**
             * @private
             */
            override protected function initializationComplete():void
            {
                useChromeColor = true;
                super.initializationComplete();
            }
            
            /**
             * @private
             */
            override public function get colorizeExclusions():Array 
            {
                return exclusions;
            }
            
            /**
             * @private
             */
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                //dropShadow.visible = getStyle("dropShadowVisible");
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>

    </fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="uninitialized" stateGroups="uninitializedStates, normalStates" />
        <s:State name="loading" stateGroups="loadingStates, normalStates" />
        <s:State name="ready" stateGroups="readyStates, normalStates" />
        <s:State name="playing" stateGroups="playingStates, normalStates" />
        <s:State name="paused" stateGroups="pausedStates, normalStates" />
        <s:State name="buffering" stateGroups="bufferingStates, normalStates" />
        <s:State name="playbackError" stateGroups="playbackErrorStates, normalStates" />
        <s:State name="disabled" stateGroups="disabledStates, normalStates"/>
        <s:State name="uninitializedAndFullScreen" stateGroups="uninitializedStates, fullScreenStates" />
        <s:State name="loadingAndFullScreen" stateGroups="loadingStates, fullScreenStates" />
        <s:State name="readyAndFullScreen" stateGroups="readyStates, fullScreenStates" />
        <s:State name="playingAndFullScreen" stateGroups="playingStates, fullScreenStates" />
        <s:State name="pausedAndFullScreen" stateGroups="pausedStates, fullScreenStates" />
        <s:State name="bufferingAndFullScreen" stateGroups="bufferingStates, fullScreenStates" />
        <s:State name="playbackErrorAndFullScreen" stateGroups="playbackErrorStates, fullScreenStates" />
        <s:State name="disabledAndFullScreen" stateGroups="disabledStates, fullScreenStates"/>
    </s:states>
    
    <!--- Video and player controls are clipped if they exceed the size of the 
          component, but the drop shadow above is not clipped and sizes to the component.
          We also set verticalScrollPosition so that when we do clip, rather than clipping  
          off the bottom first, we clip off the top fist.  This is so the player controls 
          are still visible when we start clipping. 
	-->
    <s:Group 
		id="clippedGroup" 
		clipAndEnableScrolling="true" 
		left="0" top="0" right="0" bottom="0" 
        verticalScrollPosition="{ Math.max( 0, 184 - clippedGroup.height ) }"
	>
    
        <!-- There's a minimum size for the video and controls.  If we go below that
             we are clipped. -->
        <s:Group minWidth="263" minHeight="184" left="0" right="0" top="0" bottom="0">
            
            <!--- @copy spark.components.VideoPlayer#videoDisplay -->
            <s:VideoDisplay 
				id="videoDisplay" 
				bottom="24" left="1" right="1" top="1" 
                bottom.fullScreenStates="0" left.fullScreenStates="0" 
                right.fullScreenStates="0" top.fullScreenStates="0" 
			/>
            
            <!-- video player controls -->
            <s:Group 
				left="0" right="0" bottom="0" 
                bottom.fullScreenStates="150"
			>
                
                <!-- actual controls with a maxWidth in non-fullScreen mode -->
                <!--- @copy spark.components.VideoPlayer#playerControls -->
                <s:Group 
					bottom="0" horizontalCenter="0" 
					left="0" right="0" 
                    maxWidth.fullScreenStates="755" 
					id="playerControls"
				>
                    
                    <!--- @copy spark.components.VideoPlayer#playPauseButton -->
                    <s:ToggleButton 
						id="playPauseButton" 
						left="0" bottom="0" width="39"
                        layoutDirection="ltr"
                        skinClass="com.ksria.flex.silvergreen.spark.VideoPlayer.normal.PlayPauseButtonSkin"
                        skinClass.fullScreenStates="com.ksria.flex.silvergreen.spark.VideoPlayer.fullScreen.PlayPauseButtonSkin"
                    />
                    
                    <!-- scrubbar + the currentTime/duration labels -->
                    <s:Group left="38" right="75" top="0" bottom="0">
                          
						<s:Rect 
							left="0" right="0" top="0" bottom="0" 
						>

							<s:filters>
								<s:DropShadowFilter alpha="0.5" blurX="0" blurY="0" distance="1" strength="1" />
							</s:filters>

							<s:fill>
								<s:LinearGradient scaleX="25.5708" rotation="90">
									<s:GradientEntry id="ge1" color="0xeeeeee" ratio="0"/>
									<s:GradientEntry id="ge2" color="0xededed" ratio="0.5"/>
									<s:GradientEntry id="ge3" color="0xe1e1e1" ratio="0.5"/>
									<s:GradientEntry id="ge4" color="0xe0e0e0" ratio="1"/>
								</s:LinearGradient>
							</s:fill>

							<s:stroke>
								<s:LinearGradientStroke scaleX="25.5708" rotation="90">
									<s:GradientEntry color="0xe5e5e5" ratio="0"/>
									<s:GradientEntry color="0xf9f9f9" ratio="0.5"/>
									<s:GradientEntry color="0xcccccc" ratio="0.5"/>
									<s:GradientEntry color="0xb6b6b7" ratio="1"/>
								</s:LinearGradientStroke>
							</s:stroke>

						</s:Rect>

						<!-- board --> 
						<s:Rect 
							left="1" right="1" top="1" bottom="1"
						>

							<s:stroke>
								<s:LinearGradientStroke scaleX="25.5708" rotation="90">
									<s:GradientEntry color="0xfefefe" ratio="0"/>
									<s:GradientEntry color="0xfcfcfc" ratio="0.5"/>
									<s:GradientEntry color="0xf4f4f4" ratio="0.5"/>
									<s:GradientEntry color="0xecedec" ratio="1"/>
								</s:LinearGradientStroke>
							</s:stroke>

						</s:Rect>
						
                        <!-- scrub bar + currentTime/duration in a HorizontalLayout -->
                        <s:Group left="0" right="0" height="23" bottom="0">
							
                            <s:layout>
                                <s:HorizontalLayout verticalAlign="middle" gap="1" />
                            </s:layout>
                            
                            <!-- spacer -->
                            <s:Rect width="7" height="1" />
                            
                            <!--- @copy spark.components.VideoPlayer#scrubBar -->
                            <s:ScrubBar 
								id="scrubBar" 
								width="100%" 
								liveDragging="true"
                                skinClass="com.ksria.flex.silvergreen.spark.VideoPlayer.normal.ScrubBarSkin"
                                skinClass.fullScreenStates="com.ksria.flex.silvergreen.spark.VideoPlayer.fullScreen.ScrubBarSkin" 
							/>
                            
                            <!-- spacer -->
                            <s:Rect width="8" height="1" />
                            
                            <!--- @copy spark.components.VideoPlayer#currentTimeDisplay -->
                            <s:Label id="currentTimeDisplay"
                                     color.fullScreenStates="0x696969"
                                     color.loading="0x696969"/>
                            
                            <!--- @private -->
                            <s:Label id="timeDivider" text="/"
                                     color.fullScreenStates="0x696969"
                                     color.loading="0x696969"/>
                            
                            <!--- @copy spark.components.VideoPlayer#durationDisplay -->
                            <s:Label id="durationDisplay"
                                     color.fullScreenStates="0x696969"
                                     color.loading="0x696969"/>
                            
                            <!-- spacer -->
                            <s:Rect width="8" height="1" />
							
                        </s:Group>
                    
                    </s:Group>
                    
                    <!--- @copy spark.components.VideoPlayer#volumeBar -->
                    <s:VolumeBar 
						id="volumeBar" 
						snapInterval=".01" stepSize=".01" 
						liveDragging="true"
                        right="37" bottom="0" 
                        layoutDirection="ltr"
                        skinClass="com.ksria.flex.silvergreen.spark.VideoPlayer.normal.VolumeBarSkin"
                        skinClass.fullScreenStates="com.ksria.flex.silvergreen.spark.VideoPlayer.fullScreen.VolumeBarSkin"
                    />
                    
                    <!--- @copy spark.components.VideoPlayer#fullScreenButton -->
                    <s:Button 
						id="fullScreenButton" 
						right="0" bottom="0" 
						label="Fullscreen" 
                        skinClass="com.ksria.flex.silvergreen.spark.VideoPlayer.normal.FullScreenButtonSkin"
						skinClass.fullScreenStates="com.ksria.flex.silvergreen.spark.VideoPlayer.fullScreen.FullScreenButtonSkin"
                    />
                            
                </s:Group>
                
            </s:Group>
            
            <!-- border -->
            <s:Rect 
				left="0" right="0" top="0" bottom="0" 
				excludeFrom="fullScreenStates"
				radiusX="3" radiusY="3"
			>

				<s:stroke>
                    <s:SolidColorStroke color="0xd5d5d5" />
                </s:stroke>
 
				<s:filters>
					<s:DropShadowFilter id="dsfBg" alpha="0.5" blurX="0" blurY="0" distance="1" strength="1" />
				</s:filters>
           
			</s:Rect>
    
        </s:Group>
		
    </s:Group>
	
</s:SparkSkin>
