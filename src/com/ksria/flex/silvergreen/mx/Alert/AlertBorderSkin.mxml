<?xml version="1.0" encoding="utf-8"?>
<!--- 
    这是一套基于Flex SDK 4.6基础上制作的关于spark/mx的自定义皮肤
    作者姓名：Kenshin
    作者博客：http://www.k-zone.cn/zblog/
    主页地址：http://www.k-zone.cn/project/silvergreen.html
    项目地址：https://github.com/kenshin/silvergreen
    预览地址：http://www.k-zone.cn/silvergreen/
    下载地址：https://github.com/kenshin/silvergreen
    联络邮箱：kenshin@ksria.com
    新浪微博：http://weibo.com/wonlen
    发布日期：2011年12月19日

    Copyright (c) 2011 www.k-zone.cn ksria.com

	Permission is hereby granted, free of charge, to any person obtaining a copy of
	this software and associated documentation files (the "Software"), to deal in
	the Software without restriction, including without limitation the rights to
	use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
	of the Software, and to permit persons to whom the Software is furnished to do
	so, subject to the following conditions:
	
	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.
	
	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
	
	Except as contained in this notice, the Software shall not be used in any commercial purposes.

    @author Kenshin
    @version 2.0
-->
<s:SparkSkin
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    implements="mx.core.IRectangularBorder"
>

    <fx:Script>
        <![CDATA[
        import mx.core.EdgeMetrics;
        import mx.core.IUIComponent;

        private var _metrics:EdgeMetrics = new EdgeMetrics( 1, 32, 1, 1 );
        
        
        public function get borderMetrics() : EdgeMetrics {
            var hasPanelParent : Boolean = isPanel( parent );
            var controlBar : IUIComponent = hasPanelParent ? Object(parent).mx_internal::_controlBar : null;

            if ( controlBar && controlBar.includeInLayout ) {
                _metrics.bottom = controlBar.getExplicitOrMeasuredHeight() + 1;
            } else {
                _metrics.bottom = 1;
            }
            return _metrics;
        }

        public function get backgroundImageBounds() : Rectangle {
            return null;
        }

        public function set backgroundImageBounds( value : Rectangle ) : void {
        	//TO DO
        }

        public function get hasBackgroundImage() : Boolean {
            return false;
        }

        public function layoutBackgroundImage() : void {
        	//TO DO
        }

        override protected function updateDisplayList( unscaledWidth : Number, unscaledHeight : Number ) : void {
            var em:EdgeMetrics = borderMetrics;

            super.updateDisplayList( unscaledWidth, unscaledHeight );
        }

        private static var panels:Object = {};

        private static function isPanel( parent : Object ) : Boolean {
            var s : String = getQualifiedClassName( parent );
            if ( panels[s] == 1 ) {
                return true;
            }
            if ( panels[s] == 0 ) {
                return false;
            }
            if ( s == "mx.containers::Panel" ) {
                panels[s] == 1;
                return true;
            }

            var x : XML = describeType( parent );
            var xmllist : XMLList = x.extendsClass.(@type == "mx.containers::Panel");
            if ( xmllist.length() == 0 ) {
                panels[s] = 0;
                return false;
            }
            panels[s] = 1;
            return true;
        }
        ]]>
    </fx:Script>
    
    <!-- background --> 
	<s:Rect 
		left="0" right="0" top="0" bottom="0" 
		radiusX="3" radiusY="3" 
	>

	 	<s:fill >
            <s:SolidColor id="bgFill" color="0xf0f0f0" />
        </s:fill>

        <s:stroke>            
            <s:SolidColorStroke id="stroke" color="0xd5d5d5"/>
        </s:stroke>

		<s:filters>
			<s:DropShadowFilter id="dsfBg" alpha="0.5" blurX="0" blurY="0" distance="1" strength="1" />
		</s:filters>

    </s:Rect>
    
	<!-- title bar fill -->
	<s:Rect 
		left="1" right="1" top="1" 
		height="30" 
		radiusX="3" radiusY="3"
	>
		<s:fill>

			<s:LinearGradient scaleX="25.5708" rotation="90">
				<s:GradientEntry id="ge1" color="0xeeeeee" ratio="0"/>
				<s:GradientEntry id="ge2" color="0xededed" ratio="0.2"/>
				<s:GradientEntry id="ge3" color="0xe1e1e1" ratio="0.5"/>
				<s:GradientEntry id="ge4" color="0xe0e0e0" ratio="1"/>
			</s:LinearGradient>

		</s:fill>
	</s:Rect>

</s:SparkSkin>